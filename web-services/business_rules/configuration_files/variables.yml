- field: numeric_rule_variable
  formulae: self.product.distance
  input_method:
    DataSource: API_mapQuest
    command: response.json()["distance"][1]
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: distance
  options: None
- field: numeric_rule_variable
  formulae: self.product.dist_limit
  input_method:
    DataSource: API_getPostman
    command: response.json()["actual"]
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: dist_limit
  options: None
- field: numeric_rule_variable
  formulae: self.product.cost
  input_method:
    DataSource: API_mapQuest
    command: response.json()["time"][1]
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: cost
  options: None
- field: numeric_rule_variable
  formulae: self.product.cost_limit
  input_method:
    DataSource: API_getPostman
    command: response.json()["actual"]
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: cost_limit
  options: None
- field: numeric_rule_variable
  formulae: self.product.free_mem
  input_method:
    DataSource: SSH_awsIntern
    command: cat /proc/meminfo | grep MemFree
    end: kB
    evaluation: int
    start: ':'
  label: None
  multi_thread: false
  name: free_mem
  options: None
- field: numeric_rule_variable
  formulae: self.product.total_mem
  input_method:
    DataSource: SSH_awsIntern
    command: cat /proc/meminfo | grep MemTotal
    end: kB
    evaluation: int
    start: ':'
  label: None
  multi_thread: false
  name: total_mem
  options: None
- field: numeric_rule_variable
  formulae: self.product.memory = 100 - 100 * self.product.free_mem / self.product.total_mem
  input_method:
    method: derived
    variables:
    - free_mem
    - total_mem
  label: None
  multi_thread: false
  name: memory
  options: None
- field: numeric_rule_variable
  formulae: self.product.CPU_usage
  input_method:
    DataSource: API_getPostman
    command: response.json()["actual"]
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: CPU_usage
  options: None
- field: numeric_rule_variable
  formulae: self.product.disk_space
  input_method:
    DataSource: API_postPostman
    command: response.json()["incorrect"]
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: disk_space
  options: None
- field: numeric_rule_variable
  formulae: self.product.actual
  input_method:
    DataSource: API_getPostman
    command: response.json()["actual"]
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: actual
  options: None
- field: numeric_rule_variable
  formulae: self.product.incorrect
  input_method:
    DataSource: API_postPostman
    command: response.json()["incorrect"]
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: incorrect
  options: None
- field: numeric_rule_variable
  formulae: self.product.expected
  input_method:
    DataSource: SSH_awsIntern
    command: 'cd abhijeet

      cat expected.txt'
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: expected
  options: None
- field: numeric_rule_variable
  formulae: self.product.correct
  input_method:
    DataSource: database_sqlRuleEngine
    command: select correct from rule where correct order by correct limit 1
    end: null
    evaluation: int
    start: null
  label: None
  multi_thread: true
  name: correct
  options: None
